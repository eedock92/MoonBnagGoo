{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"orderAction : \" + order.items);\n    const {\n      data\n    } = await axios.post(`api/orders`, order, config);\n    console.log(\"orderAction after axios: \" + order);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","console","log","items","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders","deliverOrder","ORDER_DELIVER_REQUEST","_id","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    \r\n    try{\r\n\r\n        dispatch({\r\n            type : ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        console.log(\"orderAction : \" + order.items );\r\n        const { data } = await axios.post(`api/orders`, order, config)\r\n        console.log(\"orderAction after axios: \" + order);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n\r\n        dispatch({\r\n            type : ORDER_CREATE_FAIL,\r\n            payload :  error.response && error.response.data.message\r\n                    ?  error.response.data.message\r\n                    :  error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type : ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type : ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n\r\n        dispatch({\r\n            type : ORDER_DETAILS_FAIL,\r\n            payload :\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type : ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type : ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n\r\n        dispatch({\r\n            type : ORDER_PAY_FAIL,\r\n            payload :\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type : ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n    \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload : data,\r\n        })\r\n    \r\n    \r\n    }catch (error){\r\n\r\n        dispatch({\r\n            type : ORDER_LIST_MY_FAIL,\r\n            payload : \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type : ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n    \r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload : data,\r\n        })\r\n    \r\n    \r\n    }catch (error){\r\n\r\n        dispatch({\r\n            type : ORDER_LIST_FAIL,\r\n            payload : \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type : ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                Authorization : `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n             config\r\n             )\r\n    \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload : data,\r\n        })\r\n    \r\n    \r\n    }catch (error){\r\n\r\n        dispatch({\r\n            type : ORDER_DELIVER_FAIL,\r\n            payload : \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}