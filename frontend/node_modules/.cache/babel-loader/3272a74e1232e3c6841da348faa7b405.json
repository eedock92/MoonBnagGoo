{"ast":null,"code":"var _jsxFileName = \"D:\\\\ByungSoo\\\\DEV\\\\potfolio\\\\ecommerce_react\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('submit');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: address,\n          required: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: city,\n          required: true,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uC6B0\\uD3B8\\uC8FC\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uC6B0\\uD3B8\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: postalCode,\n          required: true,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uBC30\\uC1A1\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uBC30\\uC1A1\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: country,\n          required: true,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"\\uACC4\\uC18D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ShippingScreen, \"aFdGJuxvW26RyVWaUQcEUCCqCc8=\");\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","ShippingScreen","history","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const [address, setAddress ] = useState('')\r\n    const [city, setCity ] = useState('')\r\n    const [postalCode, setPostalCode ] = useState('')\r\n    const [country, setCountry ] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('submit')\r\n    }\r\n\r\n    return <FormContainer>\r\n            <h1>shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type = 'text'\r\n                        placeholder = '주소를 입력하세요'\r\n                        value = {address}\r\n                        required\r\n                        onChange= {(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type = 'text'\r\n                        placeholder = '도시를 입력하세요'\r\n                        value = {city}\r\n                        required\r\n                        onChange= {(e) => setCity(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>우편주소</Form.Label>\r\n                    <Form.Control\r\n                        type = 'text'\r\n                        placeholder = '우편주소를 입력하세요'\r\n                        value = {postalCode}\r\n                        required\r\n                        onChange= {(e) => setPostalCode(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>배송지</Form.Label>\r\n                    <Form.Control\r\n                        type = 'text'\r\n                        placeholder = '배송지를 입력하세요'\r\n                        value = {country}\r\n                        required\r\n                        onChange= {(e) => setCountry(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    계속\r\n                </Button>\r\n            </Form>\r\n           </FormContainer>\r\n    \r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}