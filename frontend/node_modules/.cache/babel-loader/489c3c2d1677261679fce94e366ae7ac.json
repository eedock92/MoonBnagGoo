{"ast":null,"code":"var _jsxFileName = \"D:\\\\ByungSoo\\\\DEV\\\\potfolio\\\\ecommerce_react\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'; //import { listMyOrders } from '../actions/orderActions'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile; //   const orderListMy = useSelector((state) => state.orderListMy)\n  //   const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!userInfo.name) {\n        dispatch(getUserDetails('profile')); //     dispatch(listMyOrders())\n      } else {\n        setName(userInfo.name);\n        setEmail(userInfo.email);\n      }\n    }\n  }, [dispatch, history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('패스워드가 같지 않습니다.');\n    } else {\n      // DISPATCH UPDATE PROFILE\n      console.log(name, email, password);\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD68C\\uC6D0\\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"\\uD68C\\uC6D0\\uC815\\uBCF4\\uAC00 \\uBCC0\\uACBD \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC7AC\\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"dhOwcgU45q+blyVs83vbH16rmmg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","submitHandler","e","preventDefault","console","log","id","_id","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n//import { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n //   const orderListMy = useSelector((state) => state.orderListMy)\r\n //   const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n   \r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!userInfo.name){\r\n                dispatch(getUserDetails('profile'))\r\n           //     dispatch(listMyOrders())\r\n            }else{\r\n                setName(userInfo.name)\r\n                setEmail(userInfo.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( password !== confirmPassword){\r\n            setMessage('패스워드가 같지 않습니다.')\r\n        }else{\r\n            // DISPATCH UPDATE PROFILE\r\n            console.log(name, email, password)\r\n            dispatch(updateUserProfile({ id : user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={3}>\r\n        <h2>회원정보</h2>\r\n           \r\n           {message && <Message variant='danger'>{message}</Message>}\r\n           {error && <Message variant='danger'>{error}</Message>}\r\n           {success && <Message variant='success'>회원정보가 변경 되었습니다.</Message>}\r\n           {loading && <Loader />}\r\n           \r\n           <Form onSubmit={submitHandler}>\r\n\r\n               <Form.Group controlId='email'>\r\n                   <Form.Label>이름</Form.Label>\r\n                   <Form.Control\r\n                       type='name'\r\n                       placeholder='이름을 입력하세요'\r\n                       value={name}\r\n                       onChange = { e => setName(e.target.value)}\r\n                   ></Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='email'>\r\n                   <Form.Label>이메일</Form.Label>\r\n                   <Form.Control\r\n                       type='email'\r\n                       placeholder='이메일을 입력하세요'\r\n                       value={email}\r\n                       onChange = { e => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='password'>\r\n                   <Form.Label>비밀번호</Form.Label>\r\n                   <Form.Control\r\n                       type='password'\r\n                       placeholder='비밀번호를 입력하세요'\r\n                       value={password}\r\n                       onChange = { e => setPassword(e.target.value)}\r\n                   ></Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='confirmPassword'>\r\n                   <Form.Label>비밀번호 확인</Form.Label>\r\n                   <Form.Control\r\n                       type='password'\r\n                       placeholder='비밀번호를 재입력하세요'\r\n                       value={confirmPassword}\r\n                       onChange = { e => setConfirmPassword(e.target.value)}\r\n                   ></Form.Control>\r\n               </Form.Group>\r\n\r\n               <Button type='submit' variant='primary'>\r\n                   수정하기\r\n               </Button>\r\n           </Form>\r\n        </Col>\r\n{/* \r\n        <Col md={9}>\r\n            <h2>나의 주문</h2>\r\n            { loadingOrders ? <Loader /> : errorOrders ? \r\n            <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className = 'table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>주문번호</th>\r\n                                <th>날짜</th>\r\n                                <th>최종금액</th>\r\n                                <th>지불금액</th>\r\n                                <th>배송금액</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10) \r\n                                         ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10) \r\n                                         ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                         <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>\r\n                                                상세정보\r\n                                            </Button>\r\n                                        </LinkContainer>  \r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )    \r\n            }\r\n        </Col> */}\r\n    </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}