{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productCreate: productCreateReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('carItems') ? JSON.parse(localStorage.getItem('cartItmes')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productCreate","productDelete","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EACSC,qBADT,EAESC,oBAFT,EAGSC,oBAHT,QAIc,4BAJd;AAKA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACSC,mBADT,EAESC,iBAFT,EAGSC,wBAHT,EAISC,eAJT,EAKSC,iBALT,EAMSC,iBANT,QAOe,yBAPf;AAQA,SAASC,kBAAT,EACSC,mBADT,EAESC,eAFT,EAGSC,kBAHT,QAIc,yBAJd;AAMA,MAAMC,OAAO,GAAGpB,eAAe,CAAC;AAC5BqB,EAAAA,WAAW,EAAGjB,kBADc;AAE5BkB,EAAAA,cAAc,EAAGjB,qBAFW;AAG5BkB,EAAAA,aAAa,EAAGhB,oBAHY;AAI5BiB,EAAAA,aAAa,EAAGlB,oBAJY;AAK5BmB,EAAAA,IAAI,EAAGjB,WALqB;AAM5BkB,EAAAA,SAAS,EAAGjB,gBANgB;AAO5BkB,EAAAA,YAAY,EAAGjB,mBAPa;AAQ5BkB,EAAAA,WAAW,EAAGjB,iBARc;AAS5BkB,EAAAA,iBAAiB,EAAGjB,wBATQ;AAU5BkB,EAAAA,QAAQ,EAAGjB,eAViB;AAW5BkB,EAAAA,UAAU,EAAGjB,iBAXe;AAY5BkB,EAAAA,UAAU,EAAGjB,iBAZe;AAa5BkB,EAAAA,WAAW,EAAGjB,kBAbc;AAc5BkB,EAAAA,YAAY,EAAGjB,mBAda;AAe5BkB,EAAAA,QAAQ,EAAGjB,eAfiB;AAgB5BkB,EAAAA,WAAW,EAAGjB;AAhBc,CAAD,CAA/B;AAmBA,MAAMkB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFN;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,IAFN;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD6B,GAE7B,EAFN;AAMA,MAAMK,YAAY,GAAG;AACjBnB,EAAAA,IAAI,EAAG;AACHoB,IAAAA,SAAS,EAAER,oBADR;AAEHS,IAAAA,eAAe,EAAEH;AAFd,GADU;AAKjBjB,EAAAA,SAAS,EAAG;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AALK,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AAEA,MAAM+C,KAAK,GAAGlD,WAAW,CACrBqB,OADqB,EAErBwB,YAFqB,EAGrBzC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer, \r\n         productDetailsReducer,\r\n         productDeleteReducer,\r\n         productCreateReducer,\r\n       } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n         userRegisterReducer, \r\n         userDetailReducer,\r\n         userUpdateProfileReducer,\r\n         userListReducer,\r\n         userDeleteReducer,\r\n         userUpdateReducer\r\n        } from './reducers/userReducers'\r\nimport { orderCreateReducer,\r\n         orderDetailsReducer,\r\n         orderPayReducer,\r\n         orderListMyReducer\r\n       } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    productCreate : productCreateReducer,\r\n    productDelete : productDeleteReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailReducer,\r\n    userUpdateProfile : userUpdateProfileReducer,\r\n    userList : userListReducer,\r\n    userDelete : userDeleteReducer,\r\n    userUpdate : userUpdateReducer,\r\n    orderCreate : orderCreateReducer,\r\n    orderDetails : orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n    orderListMy : orderListMyReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('carItems') \r\n    ? JSON.parse(localStorage.getItem('cartItmes')) \r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n    ? JSON.parse(localStorage.getItem('userInfo')) \r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n    ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n    : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart : {\r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin : { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}