{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('carItems') ? JSON.parse(localStorage.getItem('cartItmes')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACSC,mBADT,EAESC,iBAFT,EAGSC,wBAHT,QAIe,yBAJf;AAMA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAAGR,kBADc;AAE5BS,EAAAA,cAAc,EAAGR,qBAFW;AAG5BS,EAAAA,IAAI,EAAGR,WAHqB;AAI5BS,EAAAA,SAAS,EAAGR,gBAJgB;AAK5BS,EAAAA,YAAY,EAAGR,mBALa;AAM5BS,EAAAA,WAAW,EAAGR,iBANc;AAO5BS,EAAAA,iBAAiB,EAAGR;AAPQ,CAAD,CAA/B;AAUA,MAAMS,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAmF,EAAhH;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,YAAY,GAAG;AACjBX,EAAAA,IAAI,EAAG;AAACY,IAAAA,SAAS,EAAEP;AAAZ,GADU;AAEjBJ,EAAAA,SAAS,EAAG;AAAEY,IAAAA,QAAQ,EAAEH;AAAZ;AAFK,CAArB;AAKA,MAAMI,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AAEA,MAAM2B,KAAK,GAAG9B,WAAW,CACrBY,OADqB,EAErBc,YAFqB,EAGrBtB,mBAAmB,CAACF,eAAe,CAAC,GAAG2B,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n         userRegisterReducer, \r\n         userDetailReducer,\r\n         userUpdateProfileReducer \r\n        } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailReducer,\r\n    userUpdateProfile : userUpdateProfileReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('carItems') ? JSON.parse(localStorage.getItem('cartItmes')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n    cart : {cartItems: cartItemsFromStorage},\r\n    userLogin : { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}