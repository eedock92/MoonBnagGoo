{"ast":null,"code":"var _jsxFileName = \"D:\\\\ByungSoo\\\\DEV\\\\potfolio\\\\ecommerce_react\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, history, productId, successUpdate, dispatch]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    console.log(file);\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      console.log(\"uploadFile_axios : \");\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); // UPDATE PRODUCT\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uD488 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"\\uC81C\\uD488\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: name || '',\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"\\uAC00\\uACA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: price || '',\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uCCA8\\uBD80\",\n            value: image || '',\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE0C\\uB79C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uBE0C\\uB79C\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: brand || '',\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC7AC\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"\\uC7AC\\uACE0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: countInStock || '',\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: category || '',\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC0C1\\uC138\\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: description || '',\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"7z3xlC8OwU9eaPva2LBCyOL8DaE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","console","log","formData","FormData","append","config","headers","data","post","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName ] = useState('')\r\n    const [price, setPrice ] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const { \r\n        loading : loadingUpdate, \r\n        error:errorUpdate, \r\n        success:successUpdate\r\n        } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type : PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== productId){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                \r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setBrand(product.brand)\r\n                    setCategory(product.category)\r\n                    setCountInStock(product.countInStock)\r\n                    setDescription(product.description)\r\n                \r\n            }\r\n        }\r\n       \r\n   \r\n    }, [product, history ,productId , successUpdate , dispatch])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        console.log(file)\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type' : 'multipart/form-data',\r\n                },\r\n            }\r\n            \r\n            console.log(\"uploadFile_axios : \") \r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n          \r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       // UPDATE PRODUCT\r\n       dispatch(updateProduct({\r\n           _id: productId,\r\n           name,\r\n           price,\r\n           image,\r\n           brand,\r\n           category,\r\n           description,\r\n           countInStock\r\n       }))\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>상품 수정</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? \r\n            (\r\n                <Loader />\r\n            ) : error ? \r\n            ( \r\n                <Message variant='danger'>{error}</Message>\r\n            ) : \r\n            (\r\n                \r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>이름</Form.Label>\r\n                <Form.Control\r\n                    type='name'\r\n                    placeholder='제품명을 입력하세요'\r\n                    value={name || ''}\r\n                    onChange = { e => setName(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n                <Form.Label>가격</Form.Label>\r\n                <Form.Control\r\n                    type='number'\r\n                    placeholder='가격을 입력하세요'\r\n                    value={price || ''}\r\n                    onChange = { e => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n                <Form.Label>이미지</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='이미지 첨부'\r\n                    value={image || ''}\r\n                    onChange = { e => setImage(e.target.value)}>    \r\n                </Form.Control>\r\n                <Form.File\r\n                    id='image-file'\r\n                    label='Choose File'\r\n                    custom\r\n                    onChange={uploadFileHandler}>\r\n                </Form.File>\r\n                {uploading && <Loader/>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n                <Form.Label>브랜드</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='브랜드를 입력하세요'\r\n                    value={brand || ''}\r\n                    onChange = { e => setBrand(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n                <Form.Label>재고</Form.Label>\r\n                <Form.Control\r\n                    type='number'\r\n                    placeholder='재고를 입력하세요'\r\n                    value={countInStock || ''}\r\n                    onChange = { e => setCountInStock(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n                <Form.Label>카테고리</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='카테고리를 입력하세요'\r\n                    value={category || ''}\r\n                    onChange = { e => setCategory(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n                <Form.Label>설명</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='상세설명을 입력하세요'\r\n                    value={description || ''}\r\n                    onChange = { e => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                수정하기\r\n            </Button>\r\n        </Form>\r\n        )}\r\n            \r\n        </FormContainer>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n"]},"metadata":{},"sourceType":"module"}