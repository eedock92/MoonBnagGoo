{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('carItems') ? JSON.parse(localStorage.getItem('cartItmes')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","orderCreateReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACSC,mBADT,EAESC,iBAFT,EAGSC,wBAHT,QAIe,yBAJf;AAKA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAGT,kBADc;AAE5BU,EAAAA,cAAc,EAAGT,qBAFW;AAG5BU,EAAAA,IAAI,EAAGT,WAHqB;AAI5BU,EAAAA,SAAS,EAAGT,gBAJgB;AAK5BU,EAAAA,YAAY,EAAGT,mBALa;AAM5BU,EAAAA,WAAW,EAAGT,iBANc;AAO5BU,EAAAA,iBAAiB,EAAGT,wBAPQ;AAQ5BU,EAAAA,WAAW,EAAGT;AARc,CAAD,CAA/B;AAWA,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFN;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,IAFN;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD6B,GAE7B,EAFN;AAMA,MAAMK,YAAY,GAAG;AACjBb,EAAAA,IAAI,EAAG;AACHc,IAAAA,SAAS,EAAER,oBADR;AAEHS,IAAAA,eAAe,EAAEH;AAFd,GADU;AAKjBX,EAAAA,SAAS,EAAG;AAAEe,IAAAA,QAAQ,EAAEL;AAAZ;AALK,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CACrBa,OADqB,EAErBgB,YAFqB,EAGrBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n         userRegisterReducer, \r\n         userDetailReducer,\r\n         userUpdateProfileReducer \r\n        } from './reducers/userReducers'\r\nimport { orderCreateReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailReducer,\r\n    userUpdateProfile : userUpdateProfileReducer,\r\n    orderCreate : orderCreateReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('carItems') \r\n    ? JSON.parse(localStorage.getItem('cartItmes')) \r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n    ? JSON.parse(localStorage.getItem('userInfo')) \r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n    ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n    : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart : {\r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin : { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}