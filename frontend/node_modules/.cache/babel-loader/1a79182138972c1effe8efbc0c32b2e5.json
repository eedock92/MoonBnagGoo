{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'; //로그인\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //로그아웃\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n}; //회원가입 \n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //회원정보 보기\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //회원정보 업데이트\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(user);\n    const {\n      data\n    } = await axios.put(`api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"profile update error\");\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //유저 목록\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'applicaiotn/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/ByungSoo/DEV/potfolio/ecommerce_react/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","console","log","put","listUsers","deleteUser","delete","updateUser"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { USER_LOGIN_REQUEST, \r\n         USER_LOGIN_SUCCESS, \r\n         USER_LOGIN_FAIL, \r\n         USER_LOGOUT, \r\n         USER_REGISTER_SUCCESS, \r\n         USER_REGISTER_FAIL,\r\n         USER_DETAILS_REQUEST,\r\n         USER_DETAILS_SUCCESS,\r\n         USER_DETAILS_FAIL,\r\n         USER_DETAILS_RESET,\r\n         USER_UPDATE_PROFILE_REQUEST,\r\n         USER_UPDATE_PROFILE_SUCCESS,\r\n         USER_UPDATE_PROFILE_FAIL, \r\n         USER_LIST_REQUEST,\r\n         USER_LIST_SUCCESS,\r\n         USER_LIST_FAIL,\r\n         USER_LIST_RESET,\r\n         USER_DELETE_REQUEST,\r\n         USER_DELETE_SUCCESS,\r\n         USER_DELETE_FAIL,\r\n         USER_UPDATE_REQUEST,\r\n         USER_UPDATE_SUCCESS,\r\n         USER_UPDATE_FAIL,\r\n         USER_UPDATE_RESET\r\n        } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n//로그인\r\nexport const login =  (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type : USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload : data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error) {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n        \r\n\r\n    }\r\n}\r\n\r\n//로그아웃\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type : USER_LOGOUT})\r\n    dispatch({ type : USER_DETAILS_RESET})\r\n    dispatch({ type : ORDER_LIST_MY_RESET})\r\n    dispatch({ type : USER_LIST_RESET})\r\n}\r\n\r\n//회원가입 \r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload : data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload : data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload : \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n//회원정보 보기\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload : data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload : \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n//회원정보 업데이트\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n   \r\n    try {\r\n\r\n        dispatch({\r\n            type : USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        console.log(user)\r\n        const { data } = await axios.put(`api/users/profile`, user, config) \r\n        \r\n        dispatch({\r\n            type : USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        console.log(\"profile update error\")\r\n        dispatch({\r\n            type : USER_UPDATE_PROFILE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message   \r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n            \r\n      \r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n//유저 목록\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n   \r\n    try {\r\n\r\n        dispatch({\r\n            type : USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n     \r\n        const { data } = await axios.get(`/api/users`,  config)\r\n        \r\n        dispatch({\r\n            type : USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message   \r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n            \r\n      \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n   \r\n    try {\r\n\r\n        dispatch({\r\n            type : USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n     \r\n        await axios.delete(`/api/users/${id}`,  config)\r\n        \r\n        dispatch({ type : USER_DELETE_SUCCESS })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message   \r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n            \r\n      \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n   \r\n    try {\r\n\r\n        dispatch({\r\n            type : USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin : { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'applicaiotn/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n     \r\n        const {data} = await axios.put(`/api/users/${id}`, user ,config)\r\n        \r\n        dispatch({ type : USER_UPDATE_SUCCESS })\r\n        dispatch({ type : USER_DETAILS_SUCCESS, payload : data})\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message   \r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n            \r\n      \r\n    }\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}